openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
  - description: Server (relative path)
    url: /energiesprong/user/0.0.3
  #- description: SwaggerHub API Auto Mocking
  #  url: https://virtserver.swaggerhub.com/energiesprong/user/0.0.3
info:
  version: "0.0.3"
  title: Stroomversnelling UDB Resource Server API
  description: >-
    This API describes how to access user resources for client applications and the performance database. The full documentation for this API (still under development) can be requested by sending an email to mwitkamp@stroomversnelling.nl.
#security:
#    - JWTBearerAuth: []

paths:
  /contract:
    get:
      security:
        - JWTBearerAuth: []
      operationId: app.get_contract
      summary: Get all contracts - role per connection.
      description: 
        A list of all contracts. Contracts indicate the time bound role of the user against a particular connection. 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contractList"
  /connection:
    get:
      security:
        - JWTBearerAuth: []
      operationId: app.get_connection
      summary: Get all connections
      description:
        A list of all connections. Connections are devices/locations with data to which a user has a contract. A PDB token will limit results to connectionIds associated with that PDB.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/connectionList"
  /pdb:
    get:
      security:
        - JWTBearerAuth: []
      operationId: app.get_pdb
      summary: Get all PDBs
      description:
        A list of URLs of the PDB resource servers. Only accessible with a user token.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/pdbUrlList"
components:
  schemas:
    contract:
      type: object
      required:
        - connectionId
        - role
        - start
        - end
      properties:
        connectionId:
          $ref: "#/components/schemas/connection/properties/connectionId" 
        start:
          $ref: "#/components/schemas/dateTimeFormatReadOnly" 
        end:
          $ref: "#/components/schemas/dateTimeFormatReadOnly" 
        role:
          type: string
          description: The role can be one of the following - owner, guaranteeProvider, monitoringServiceProvider, maintenanceProvider, or directServiceProvider.
          enum: [inhabitant, owner, guaranteeProvider, monitoringServiceProvider, maintenanceProvider, directServiceProvider]
          readOnly: true
          example: owner
    connection:
      type: object
      required:
        - connectionId
        - pdbUrl
      properties:
        connectionId:
          type: string
          description: the unique identifier, string, 20 characters, randomly generated by UDB
          pattern: '^[a-zA-Z0-9]{2,20}$'
          readOnly: true
        pdbUrl:
          type: string
          #pattern: '^https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)$'
          description: the URL of the PDB resource server associated with this connectionId
          readOnly: true
        address:
          type: string
          description: the location / address of the connection
          readOnly: true
    pdbUrlList:
      type: array
      items:
        $ref: "#/components/schemas/connection/properties/pdbUrl"
    connectionList:
      type: array
      items:
        $ref: "#/components/schemas/connection"
    contractList:
      type: array
      items:
        $ref: "#/components/schemas/contract"
    dateTimeFormatReadOnly:
      type: string
      format: date-time
      description: ISO8601 date time of the user creation date defined by "YYYY-MM-DDTHH:MM:SS±HH:MM" (e.g. YYYY-MM-DDTHH:MM:SS±HH:MM CET time)
      readOnly: true
  securitySchemes:
  
    JWTBearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: app.decode_token